{"version":3,"sources":["styles/img/カイジ.png","styles/img/logo.svg","components/Header.js","containers/Header.js","actions/chats.js","firebase/index.js","firebase/config.js","components/ChatPanel.js","containers/ChatPanel.js","components/ChatForm.js","containers/ChatForm.js","components/Login.js","containers/Login.js","components/App.js","containers/App.js","reducers/chats.js","index.js"],"names":["module","exports","this","props","title","isLogin","logOut","console","log","element","className","Component","HeaderContents","onClick","connect","dispatch","firebase","auth","signOut","then","type","Header","firebaseDb","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","equalDatabase","ref","child","on","snapshot","val","Object","values","inputChat","map","chat","index","key","src","kaiji","alt","text","time","states","payload","ChatPanel","handleCancel","e","preventDefault","validation","push","Date","getHours","toString","getMinutes","onSubmit","placeholder","value","onChange","target","ChatForm","refLogin","logo","doLogin","state","provider","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","user","displayName","email","uid","loginOk","alert","Login","App","initialState","chatReducer","action","copy","reverse","store","createStore","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.521ea5c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/カイジ.3975da28.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\nimport '../styles/pc/Header.css'\n\nexport default class extends Component{\n    render(){\n        const {title,isLogin,logOut} = this.props\n        console.log(logOut)\n        console.log(this.props)\n        const element = isLogin? <HeaderContents logOut={logOut} /> : null\n        \n        return(\n            <div className=\"header\">\n                <h1 className=\"header_title\">{title}</h1>\n                {element}\n            </div>\n        )\n    }\n}\n\nconst HeaderContents = (props) => {\n    return(\n        <button className=\"header_logout\" onClick={() => props.logOut()}>Logout</button>\n    )\n}","import { connect } from 'react-redux'\nimport { logOut } from '../actions/chats'\nimport Header from '../components/Header'\nimport firebase from 'firebase'\n\nconst mapStateToProps = ({isLogin}) => {\n    return{\n        isLogin\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        logOut: () => {\n            firebase.auth().signOut().then(()=>{\n            dispatch(logOut())\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Header)","export const inputChat = (chat) => ({\n    type:'INPUT_MESSAGE',\n    payload:{\n        chat\n    }\n})\n\nexport const equalDatabase = (inputChat) => ({\n    type:'EQUAL_DATABASE',\n    payload:{\n        inputChat\n    }\n})\n\nexport const loginOk = (user) => ({\n    type:'LOGIN_OK',\n    payload: {\n        displayName: user.displayName,\n        email: user.email,\n        uid: user.uid\n    }\n})\n\nexport const logOut = () => ({\n    type:'LOGOUT'  \n})","import firebase from 'firebase';\nimport { firebaseConfig } from './config.js';\n\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nexport const firebaseDb = firebaseApp.database();","export const firebaseConfig = {\n    apiKey: \"AIzaSyCXT-Kv9En2cLsa08Gzjsw4Xw795d9-T4Y\",\n    authDomain: \"connect-bb28b.firebaseapp.com\",\n    databaseURL: \"https://connect-bb28b.firebaseio.com\",\n    projectId: \"connect-bb28b\",\n    storageBucket: \"\",\n    messagingSenderId: \"68923430908\",\n    appId: \"1:68923430908:web:a74d583c09b897ef\"\n}","import React,{Component}from 'react'\nimport '../styles/pc/ChatPanel.css'\nimport '../styles/sm/ChatPanel.css'\nimport kaiji from '../styles/img/カイジ.png'\nimport {firebaseDb} from '../firebase/index'\n\nexport default class extends Component{\n    async componentDidMount() {\n        const {equalDatabase} = this.props\n        const ref = firebaseDb.ref('rooms').child('room1').child('chat')\n        ref.on('value',function(snapshot){\n            if(snapshot.val()){\n                equalDatabase(Object.values(snapshot.val()))\n                console.log(Object.values(snapshot.val()))\n            }\n        })\n    }\n    render(){\n        const {inputChat} = this.props\n        return(\n            <div className=\"chatPanel\">\n                <div className=\"chatPanel_content\">\n                    {inputChat.map((chat,index) => {\n                        return(\n                            <div className=\"chatPanel_message\" key={index}>\n                                <div className=\"chatPanel_imgBox\">\n                                    <img src={kaiji} className=\"chatPanel_img\" alt=\"プロフィール写真\"/>\n                                </div>\n                                <p className=\"chatPanel_text\">{chat.text}</p>\n                                <span className=\"chatPanel_time\">{chat.time}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport { equalDatabase} from '../actions/chats'\nimport ChatPanel from '../components/ChatPanel'\n\nconst mapStateToProps = (states) => {\n    return ({inputChat:states.inputChat})\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        equalDatabase:(inputChat) => dispatch(equalDatabase(inputChat))\n    })\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatPanel)","import React , {Component} from 'react'\nimport '../styles/pc/ChatForm.css'\nimport '../styles/sm/ChatForm.css'\nimport {firebaseDb} from '../firebase/index'\n\nexport default class extends Component{\n    handleCancel = (e) =>{\n        e.preventDefault();\n    }\n    validation = (chat) => {\n        if(chat === \"\"){\n            return false\n        }else{\n            const ref = firebaseDb.ref('rooms').child('room1').child('chat')\n            ref.push({\n                text:chat,\n                time:(new Date().getHours()).toString() + \":\" + (new Date().getMinutes()).toString()\n            })\n        }\n    }\n    render(){\n        const { chat,inputChat } = this.props\n        return(\n            <div className=\"chatForm\">\n                <form className=\"chatForm_panel\" onSubmit={e => {this.handleCancel(e)}}>\n                    <input type=\"text\" placeholder=\"chat your message\" className=\"chatForm_text\" value={chat} onChange={(e) =>{inputChat(e.target.value)}}/>\n                    <button type=\"send\" className=\"chatForm_sendButton\" onClick={() => {this.validation(chat)}}><i className=\"fas fa-comments chatForm_icon\"></i></button>\n                </form>\n            </div>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport ChatForm from '../components/ChatForm'\nimport { inputChat } from '../actions/chats'\n\nconst mapStateToProps = ({chat}) => ({\n    chat\n})\n\nconst mapDispatchToProps = (dispatch) =>({\n    inputChat:(chat) => dispatch(inputChat(chat)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatForm)","import React,{Component} from 'react'\nimport '../styles/pc/Login.css'\nimport logo from '../styles/img/logo.svg'\n\n\nexport default class extends Component{\n    handleCancel = (e) => {\n        e.preventDefault()\n    }\n    componentDidMount() {\n        this.props.refLogin()\n      }\n\n    render(){\n        return(\n            <>\n                <div className=\"login_messageBox\">\n                    <img src={logo} className=\"login_logo\" alt=\"logo\" />\n                    <h2 className=\"login_text\">Let's connect your friends, family, <br></br>peopele in the world</h2>\n                </div>\n                <div className=\"login_formBox\">\n                    <form className=\"login_form\" onSubmit={e => this.handleCancel(e)}>\n                        <h3 className=\"login_formTitle\">Log in to Connect</h3>\n                        <div className=\"login_formTextBox\">\n                            <input type=\"text\" className=\"login_formText\" placeholder=\"Email Address\"/>\n                            <input type=\"password\" className=\"login_formText\" placeholder=\"Password\" />\n                            <button type=\"send\" className=\"login_formTextButton\">Login</button>\n                        </div>\n                    </form>\n                    <div className=\"login_acount\">\n                        <p className=\"login_acountText\">Googleアカウントを使ってログイン</p>\n                        <button className=\"login_acountButton\" onClick={this.props.doLogin}><i className=\"fab fa-google font-color--google\"></i></button>\n                    </div>\n                </div>\n               \n            </>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport firebase from 'firebase'\nimport Login from '../components/Login'\nimport { loginOk } from '../actions/chats'\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      doLogin: () => {\n        let provider = new firebase.auth.GoogleAuthProvider()\n        firebase.auth().signInWithPopup(provider)\n      },\n      refLogin: () => {\n        firebase.auth().onAuthStateChanged(user => {\n          if (!user) {\n            alert('認証が失敗しました')\n            return\n          }\n          dispatch(loginOk(user))\n        })\n      }\n    }\n  }\n\n  export default connect(mapStateToProps,mapDispatchToProps)(Login)","import React,{Component}from 'react'\nimport Header from '../containers/Header'\nimport ChatPanel from '../containers/ChatPanel'\nimport ChatForm from '../containers/ChatForm'\nimport Login from '../containers/Login'\n\nexport default class extends Component{\n    render(){\n        const { uid } = this.props\n        const element = uid ?\n        <>\n            <ChatPanel />\n            <ChatForm />\n        </>\n        : \n        <Login />\n        \n        return(\n            <>\n                <Header title={\"CONNECT\"}/>\n                {element}\n            </>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport  App  from '../components/App'\n\nconst mapStateToProps = (state) => {\n    return{\n        uid: state.auth.uid\n    }\n}\n\nexport default connect(mapStateToProps)(App)","export const initialState = {\n    chat: \"\",\n    inputChat: [],\n    isLogin: false,\n    auth:{\n        uid: '',\n        displayName: '',\n        email:''\n    }\n}\n\nconst chatReducer = (state = initialState,action) => {\n    switch(action.type){\n        case \"INPUT_MESSAGE\" :\n            return{\n                ...state,\n                chat: action.payload.chat\n            }\n        case \"EQUAL_DATABASE\" :\n            const copy = action.payload.inputChat.reverse()\n            return{\n                ...state,\n                chat:\"\",\n                inputChat:copy\n            }\n        case \"LOGIN_OK\" : \n            return{\n                ...state,\n                auth: {\n                    uid: action.payload.uid,\n                    email: action.payload.email,\n                    displayName: action.payload.displayName,\n                },\n                isLogin: true,\n            }\n        case \"LOGOUT\" :\n            return{\n                ...state,\n                auth: {\n                    uid: \"\",\n                    email: \"\",\n                    displayName: \"\"\n                },\n                isLogin: false\n            }\n        default :\n            return state\n    }\n}\n\nexport default chatReducer","//reset.cssはこの位置に固定\nimport './styles/reset.css'\n\n//ここから記述\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App'\nimport { Provider } from 'react-redux'\nimport { createStore,applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport chatReducer from './reducers/chats'\nimport './styles/index.css'\n\nconst store = createStore(\n    chatReducer,\n    applyMiddleware(logger)\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}