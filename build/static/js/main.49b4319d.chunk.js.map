{"version":3,"sources":["styles/img/カイジ.png","styles/img/logo.svg","components/Header.js","containers/Header.js","actions/chats.js","components/ChatPanel.js","firebase/index.js","firebase/config.js","containers/ChatPanel.js","components/ChatForm.js","containers/ChatForm.js","components/Home.js","containers/Home.js","components/Login.js","containers/Login.js","components/App.js","containers/App.js","reducers/chats.js","index.js"],"names":["module","exports","this","props","title","isLogin","logOut","element","className","Component","HeaderContents","onClick","connect","dispatch","firebase","auth","signOut","then","type","Header","refDatabase","inputChat","profile","map","chat","index","user","id","uid","key","src","kaiji","alt","text","time","firebaseDb","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","child","on","snapshot","val","payload","Object","values","ChatPanel","handleCancel","e","preventDefault","validation","inputDatabase","onSubmit","placeholder","value","onChange","target","stateProps","dispatchProps","ownProps","assign","push","Date","getHours","toString","getMinutes","ChatForm","name","displayName","email","htmlFor","accept","Home","setAuthEmail","setState","authEmail","setAuthPassword","authPassword","setEmail","setPassword","password","tabSwitch","tab","tabIndex","doLoginWithEmail","state","refLogin","doLogin","createAcount","logo","LogInForm","NewAcountForm","provider","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","loginOk","signInWithEmailAndPassword","catch","error","errorMessage","message","alert","createUserWithEmailAndPassword","errorCode","code","Login","exact","path","component","ChatRoom","App","initialState","chatReducer","action","copy","reverse","store","createStore","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49b4319d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/カイジ.3975da28.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\nimport '../styles/pc/Header.css'\n\nexport default class extends Component{\n    render(){\n        const {title,isLogin,logOut} = this.props\n        const element = isLogin? <HeaderContents logOut={logOut} /> : null\n        \n        return(\n            <div className=\"header\">\n                <h1 className=\"header_title\">{title}</h1>\n                {element}\n            </div>\n        )\n    }\n}\n\nconst HeaderContents = (props) => {\n    return(\n        <button className=\"header_logout\" onClick={() => props.logOut()}>Logout</button>\n    )\n}","import { connect } from 'react-redux'\nimport { logOut } from '../actions/chats'\nimport Header from '../components/Header'\nimport firebase from 'firebase'\n\nconst mapStateToProps = ({isLogin}) => {\n    return{\n        isLogin\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        logOut: () => {\n            firebase.auth().signOut().then(()=>{\n            dispatch(logOut())\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Header)","export const inputChat = (chat) => ({\n    type:'INPUT_MESSAGE',\n    payload:{\n        chat\n    }\n})\n\nexport const equalDatabase = (inputChat) => ({\n    type:'EQUAL_DATABASE',\n    payload:{\n        inputChat\n    }\n})\n\nexport const loginOk = (user) => ({\n    type:'LOGIN_OK',\n    payload: {\n        displayName: user.displayName,\n        email: user.email,\n        uid: user.uid\n    }\n})\n\nexport const logOut = () => ({\n    type:'LOGOUT'  \n})","import React,{Component}from 'react'\nimport '../styles/pc/ChatPanel.css'\nimport '../styles/sm/ChatPanel.css'\nimport kaiji from '../styles/img/カイジ.png'\n\nexport default class extends Component{\n    componentDidMount() {\n        this.props.refDatabase()\n    }\n    render(){\n        const {inputChat,profile} = this.props\n        return(\n            <div className=\"chatPanel\">\n                <div className=\"chatPanel_content\">\n                    {inputChat.map((chat,index) => {\n                        const user = chat.id === profile.uid ? \"chatPanel_message reverse\": \"chatPanel_message\"\n                        return(\n                            <div className={user} key={index}>\n                                    <div className=\"chatPanel_imgBox\">\n                                        <img src={kaiji} className=\"chatPanel_img\" alt=\"プロフィール写真\"/>\n                                    </div>\n                                <p className=\"chatPanel_text\">{chat.text}</p>\n                                <span className=\"chatPanel_time\">{chat.time}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}","import firebase from 'firebase';\nimport { firebaseConfig } from './config.js';\n\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nexport const firebaseDb = firebaseApp.database();","export const firebaseConfig = {\n    apiKey: \"AIzaSyCXT-Kv9En2cLsa08Gzjsw4Xw795d9-T4Y\",\n    authDomain: \"connect-bb28b.firebaseapp.com\",\n    databaseURL: \"https://connect-bb28b.firebaseio.com\",\n    projectId: \"connect-bb28b\",\n    storageBucket: \"\",\n    messagingSenderId: \"68923430908\",\n    appId: \"1:68923430908:web:a74d583c09b897ef\"\n}","import { connect } from 'react-redux'\nimport { equalDatabase} from '../actions/chats'\nimport ChatPanel from '../components/ChatPanel'\nimport {firebaseDb} from '../firebase/index'\n\nconst mapStateToProps = ({inputChat,profile}) => {\n    return ({\n        inputChat,\n        profile\n    })\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        refDatabase:() => {\n            const ref = firebaseDb.ref('rooms').child('room1').child('chat')\n            ref.on('value',function(snapshot){\n                if(snapshot.val()){\n                    dispatch(equalDatabase(Object.values(snapshot.val())))\n                }\n            })\n        }\n    })\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatPanel)","import React , {Component} from 'react'\nimport '../styles/pc/ChatForm.css'\nimport '../styles/sm/ChatForm.css'\n\n\nexport default class extends Component{\n    handleCancel = (e) =>{\n        e.preventDefault();\n    }\n    validation = (chat) => {\n        if(chat === \"\"){\n            return false\n        }else{\n            this.props.inputDatabase()\n        }\n    }\n    render(){\n        const { chat,inputChat } = this.props\n        return(\n            <div className=\"chatForm\">\n                <form className=\"chatForm_panel\" onSubmit={e => {this.handleCancel(e)}}>\n                    <input type=\"text\" placeholder=\"chat your message\" className=\"chatForm_text\" value={chat} onChange={(e) =>{inputChat(e.target.value)}}/>\n                    <button type=\"send\" className=\"chatForm_sendButton\" onClick={() => {this.validation(chat)}}><i className=\"fas fa-comments chatForm_icon\"></i></button>\n                </form>\n            </div>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport ChatForm from '../components/ChatForm'\nimport { inputChat } from '../actions/chats'\nimport {firebaseDb} from '../firebase/index'\n\nconst mapStateToProps = ({chat,profile}) => ({\n    chat,\n    profile\n})\n\nconst mapDispatchToProps = (dispatch) =>({\n    inputChat:(chat) => dispatch(inputChat(chat)),\n})\n\nconst mergeProps = (stateProps,dispatchProps,ownProps) => {\n    return Object.assign({},ownProps,stateProps,{\n        ...dispatchProps,\n        inputDatabase:() => {\n            const ref = firebaseDb.ref('rooms').child('room1').child('chat')\n            ref.push({\n                text:stateProps.chat,\n                time:(new Date().getHours()).toString() + \":\" + (new Date().getMinutes()).toString(),\n                id: stateProps.profile.uid \n            })\n        }\n    })\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps,mergeProps)(ChatForm)","import React,{Component} from 'react'\nimport Header from '../containers/Header'\nimport kaiji from '../styles/img/カイジ.png'\nimport '../styles/pc/Home.css'\n\nexport default class extends Component {\n    render(){\n        const {profile} = this.props\n        const name = profile.displayName ? profile.displayName : profile.email\n        return(\n            <>\n                <Header title={'HOME'}/>\n                <div className=\"profile_wrapper\">\n                    <div className=\"profile_data\">\n                        <div className=\"profile_imgBox\">\n                            <img src={kaiji} alt=\"プロフィール写真\" className=\"profile_img\"/>\n                        </div>\n                        <p className=\"profile_name\">{name}</p>\n                        <form className=\"profile_changeForm\">\n                            <label htmlFor=\"profile\" className=\"profile_imgSelectLabel\">プロフィール画像を変更する</label>\n                            <input id=\"profile\" className=\"profile_imgSelect\"type=\"file\" accept=\"image/png,image/jpeg\"/>\n                            <button type=\"send\" className=\"profile_imgSelectButton\">変更を決定する</button>\n                        </form>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport Home from '../components/Home'\n\nconst mapStateToProps = ({profile}) => {\n    return{\n        profile\n    }\n}\n\n// const mapDispatchToProps = ({})\n\nexport default connect(mapStateToProps)(Home)","import React,{Component} from 'react'\nimport Header from '../containers/Header'\nimport '../styles/pc/Login.css'\nimport logo from '../styles/img/logo.svg'\n\n\nexport default class extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            tabIndex: 1,\n            email: '',\n            password: '',\n            authEmail: '',\n            authPassword: ''\n        }\n    }\n    setAuthEmail = (value) => {\n        this.setState({authEmail: value})\n    }\n    setAuthPassword = (value) => {\n        this.setState({authPassword: value })\n    }\n    setEmail = (value) => {\n        this.setState({email:value})\n    }\n    setPassword = (value) => {\n        this.setState({password:value})\n    }\n    tabSwitch = (index) => {\n        const tab = index === 1 ? 2 : 1\n        this.setState({tabIndex:tab})\n    }\n    handleCancel = (e) => {\n        e.preventDefault()\n        this.props.doLoginWithEmail(this.state.authEmail,this.state.authPassword)\n    }\n    componentDidMount() {\n        this.props.refLogin()\n        this.setState({tabIndex:1})\n      }\n\n    render(){\n        const tab = this.state.tabIndex === 1 ? \n        <LogInForm handleCancel={this.handleCancel} doLogin={this.props.doLogin} tabSwitch={this.tabSwitch} {...this.state} setAuthPassword={this.setAuthPassword} setAuthEmail={this.setAuthEmail}/>\n         : \n        <NewAcountForm handleCancel={this.handleCancel} tabSwitch={this.tabSwitch} {...this.state} setEmail={this.setEmail} setPassword={this.setPassword} createAcount={this.props.createAcount}/>\n        return(\n            <>\n                <Header title={\"CONNECT\"}/>\n                <div className=\"login_messageBox\">\n                    <img src={logo} className=\"login_logo\" alt=\"logo\" />\n                    <h2 className=\"login_text\">Let's connect your friends, family, <br></br>peopele in the world</h2>\n                </div>\n                <div className=\"login_formBox\">\n                    {tab}\n                </div>\n               \n            </>\n        )\n    }\n}\n\nconst LogInForm = (props) => {\n    return(\n        <>\n            <form className=\"login_form\" onSubmit={e => props.handleCancel(e)}>\n                <h3 className=\"login_formTitle\">Log in to Connect</h3>\n                <div className=\"login_formTextBox\">\n                    <input type=\"text\" className=\"login_formText\" value={props.authEmail} placeholder=\"Email Address\" onChange={(e) => props.setAuthEmail(e.target.value)}/>\n                    <input type=\"password\" className=\"login_formText\" value={props.authPassword} placeholder=\"Password\" onChange={e => props.setAuthPassword(e.target.value)}/>\n                    <button type=\"send\" className=\"login_formTextButton\">Login</button>\n                </div>\n            </form>\n            <div className=\"login_acount\">\n                <p className=\"login_acountText\">Googleアカウントを使ってログイン</p>\n                <button className=\"login_acountButton\" onClick={props.doLogin}><i className=\"fab fa-google font-color--google\"></i></button>\n                <p className=\"login_acount login_acountText\">アカウントがない場合は<span className=\"login_acountTabSwitch\" onClick={() => props.tabSwitch(props.tabIndex)}>こちら</span>でアカウントを作成してください。</p>\n            </div>\n        </>\n    )\n}\n\nconst NewAcountForm = (props) => {\n    return(\n        <>\n            <form className=\"acount_form\" onSubmit={e => props.handleCancel(e)}>\n                <h3 className=\"acount_Title login_formTitle\">Let's create new acount</h3>\n                <div className=\"login_formTextBox\">\n                    <input type=\"text\" className=\"login_formText\" placeholder=\"Email Address\" onChange={(e) => props.setEmail(e.target.value)}/>\n                    <input type=\"password\" className=\"login_formText\" placeholder=\"Password\" onChange={(e) => props.setPassword(e.target.value)}/>\n                    <button type=\"send\" className=\"login_formTextButton\" onClick={() => props.createAcount(props.email,props.password)}>Sign Up</button>\n                </div>\n                <p className=\"login_acount login_acountText login_acountTabSwitch\" onClick={() => props.tabSwitch(props.tabIndex)}>ログイン画面に戻る</p>\n            </form>\n        </>\n    )\n}","import { connect } from 'react-redux'\nimport firebase from 'firebase'\nimport Login from '../components/Login'\nimport { loginOk } from '../actions/chats'\n\nconst mapStateToProps = (state) => {\n    return {\n      state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      doLogin: () => {\n        let provider = new firebase.auth.GoogleAuthProvider()\n        firebase.auth().signInWithPopup(provider)\n      },\n      refLogin: () => {\n        firebase.auth().onAuthStateChanged(user => {\n          if (!user) {\n            return\n          }\n          dispatch(loginOk(user))\n        })\n      },\n      doLoginWithEmail: (email,password) => {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n        .catch(function(error) {\n          // Handle Errors here.\n          var errorMessage = error.message;\n          alert(errorMessage)\n        });\n      },\n      createAcount: (email,password) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n          .catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            if (errorCode === 'auth/weak-password') {\n              alert('The password is too weak.');\n            } else {\n              alert(errorMessage);\n            }\n          });\n      }\n    }\n  }\n\n  export default connect(mapStateToProps,mapDispatchToProps)(Login)","import React,{Component}from 'react'\nimport Header from '../containers/Header'\nimport ChatPanel from '../containers/ChatPanel'\nimport ChatForm from '../containers/ChatForm'\nimport Home from '../containers/Home'\nimport Login from '../containers/Login'\nimport { BrowserRouter as Router,Route,Switch } from 'react-router-dom'\n\nexport default class extends Component{\n    render(){\n        const { isLogin } = this.props\n        const element = isLogin ?\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={ChatRoom} />\n                <Route component={Home} />\n            </Switch>\n        </Router>\n        : \n        <Login />\n        return(\n            <>\n                {element}\n            </>\n        )\n    }\n}\n\nconst ChatRoom = () => {\n    return (\n        <>\n            <Header title={\"CONNECT\"}/>\n            <ChatPanel />\n            <ChatForm />\n        </>\n    )\n}\n","import { connect } from 'react-redux'\nimport  App  from '../components/App'\n\nconst mapStateToProps = ({isLogin}) => {\n    return{\n        isLogin: isLogin\n    }\n}\n\nexport default connect(mapStateToProps)(App)","export const initialState = {\n    chat: \"\",\n    inputChat: [],\n    isLogin: false,\n    profile:{\n        uid: '',\n        displayName: '',\n        email:''\n    },\n}\n\nconst chatReducer = (state = initialState,action) => {\n    switch(action.type){\n        case \"INPUT_MESSAGE\" :\n            return{\n                ...state,\n                chat: action.payload.chat\n            }\n        case \"EQUAL_DATABASE\" :\n            const copy = action.payload.inputChat.reverse()\n            return{\n                ...state,\n                chat:\"\",\n                inputChat:copy\n            }\n        case \"LOGIN_OK\" : \n            return{\n                ...state,\n                profile: {\n                    uid: action.payload.uid,\n                    email: action.payload.email,\n                    displayName: action.payload.displayName,\n                },\n                isLogin: true,\n            }\n        case \"LOGOUT\" :\n            return{\n                ...state,\n                profile: {\n                    uid: \"\",\n                    email: \"\",\n                    displayName: \"\"\n                },\n                isLogin: false\n            }\n        default :\n            return state\n    }\n}\n\nexport default chatReducer","//reset.cssはこの位置に固定\nimport './styles/reset.css'\n\n//ここから記述\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App'\nimport { Provider } from 'react-redux'\nimport './styles/index.css'\nimport chatReducer from './reducers/chats'\nimport logger from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\n\nconst store = createStore(\n    chatReducer,\n    applyMiddleware(logger)\n)\n\nReactDOM.render(\n        <Provider store={store}>\n            <App/>\n        </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}