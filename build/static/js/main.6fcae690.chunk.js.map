{"version":3,"sources":["styles/img/カイジ.png","components/Header.js","containers/ChatPanel.js","components/ChatPanel.js","components/ChatForm.js","containers/ChatForm.js","actions/chats.js","firebase/index.js","firebase/config.js","components/App.js","containers/App.js","reducers/chats.js","index.js"],"names":["module","exports","props","state","flg","title","this","className","Component","connect","states","inputChat","map","chat","index","key","src","kaiji","alt","text","handleCancel","e","preventDefault","validation","addChat","onSubmit","type","placeholder","value","onChange","target","onClick","dispatch","payload","time","Date","getHours","toString","getMinutes","ChatForm","firebaseDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","equalDatabase","ref","child","on","snapshot","Object","values","val","App","initialState","chatReducer","action","copy","slice","unshift","store","createStore","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fcae690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/カイジ.3975da28.png\";","import React,{Component} from 'react'\nimport '../styles/pc/Header.css'\n\nexport default class extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            flg: true,\n        }\n    }\n    render(){\n        const {title} = this.props\n        return(\n            <div className=\"header\">\n                <h1 className=\"header_title\">{title}</h1>\n            </div>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport ChatPanel from '../components/ChatPanel'\n\nconst mapStateToProps = (states) => {\n    return ({inputChat:states.inputChat})\n}\n\nexport default connect(mapStateToProps,)(ChatPanel)","import React from 'react'\nimport '../styles/pc/ChatPanel.css'\nimport kaiji from '../styles/img/カイジ.png'\n\nexport default ({inputChat}) => {\n    return(\n        <div className=\"chatPanel\">\n            <div className=\"chatPanel_content\">\n                {inputChat.map((chat,index) => {\n                    return(\n                        <div className=\"chatPanel_message\" key={index}>\n                            <div className=\"chatPanel_imgBox\">\n                                <img src={kaiji} className=\"chatPanel_img\" alt=\"プロフィール写真\"/>\n                            </div>\n                            <p className=\"chatPanel_text\">{chat.text}</p>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport '../styles/pc/ChatForm.css'\n\nexport default class extends Component{\n    handleCancel = (e) =>{\n        e.preventDefault();\n    }\n    validation = (chat,addChat) => {\n        if(chat === \"\"){\n            return false\n        }else{\n            addChat(chat)\n        }\n    }\n    render(){\n        const { chat,inputChat,addChat } = this.props\n        return(\n            <div className=\"chatForm\">\n                <form className=\"chatForm_panel\" onSubmit={e => {this.handleCancel(e)}}>\n                    <input type=\"text\" placeholder=\"chat your message\" className=\"chatForm_text\" value={chat} onChange={(e) =>{inputChat(e.target.value)}}/>\n                    <button type=\"send\" className=\"chatForm_sendButton\" onClick={() => {this.validation(chat,addChat)}}><i className=\"fas fa-comments chatForm_icon\"></i></button>\n                </form>\n            </div>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport ChatForm from '../components/ChatForm'\nimport { inputChat,addChat } from '../actions/chats'\n\nconst mapStateToProps = ({chat}) => ({\n    chat\n})\n\nconst mapDispatchToProps = (dispatch) =>({\n    inputChat:(chat) => dispatch(inputChat(chat)),\n    addChat:(chat) => dispatch(addChat(chat))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatForm)","export const inputChat = (chat) => ({\n    type:'INPUT_MESSAGE',\n    payload:{\n        chat\n    }\n})\n\nexport const addChat = (chat) => ({\n    type:'CHAT_MESSAGE',\n    payload:{\n        chat:chat,\n        time:(new Date().getHours()).toString() + \":\" + (new Date().getMinutes()).toString()\n    }\n})\n\nexport const equalDatabase = (inputChat) => ({\n    type:'EQUAL_DATABASE',\n    payload:{\n        inputChat\n    }\n})","import firebase from 'firebase';\nimport { firebaseConfig } from './config.js';\n\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nexport const firebaseDb = firebaseApp.database();","export const firebaseConfig = {\n    apiKey: \"AIzaSyCXT-Kv9En2cLsa08Gzjsw4Xw795d9-T4Y\",\n    authDomain: \"connect-bb28b.firebaseapp.com\",\n    databaseURL: \"https://connect-bb28b.firebaseio.com\",\n    projectId: \"connect-bb28b\",\n    storageBucket: \"\",\n    messagingSenderId: \"68923430908\",\n    appId: \"1:68923430908:web:a74d583c09b897ef\"\n}","import React,{Component}from 'react'\nimport Header from './Header'\nimport ChatPanel from '../containers/ChatPanel'\nimport ChatForm from '../containers/ChatForm'\nimport {firebaseDb} from '../firebase/index'\n\nexport default class extends Component{\n    async componentDidMount() {\n        const {equalDatabase} = this.props\n        // console.log(equalDatabase);\n        const ref = firebaseDb.ref('rooms').child('room1').child('chat')\n        ref.on('value',function(snapshot){\n            equalDatabase(Object.values(snapshot.val()))\n        })\n    }\n    render(){\n        return(\n            <>\n                <Header title={\"CONNECT\"}/>\n                <ChatPanel />\n                <ChatForm />\n            </>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport App from '../components/App'\nimport { equalDatabase } from '../actions/chats'\n\nconst mapStateToProps = ({state}) => ({\n    state\n})\nconst mapDispatchToProps = (dispatch) => ({\n    equalDatabase:(inputChat) => dispatch(equalDatabase(inputChat))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)","// import {firebaseDb} from '../firebase/index'\n\nexport const initialState = {\n    chat: \"\",\n    inputChat: [],\n}\n\nconst chatReducer = (state = initialState,action) => {\n    switch(action.type){\n        case \"INPUT_MESSAGE\" :\n            return{\n                ...state,\n                chat: action.payload.chat\n            }\n        case \"CHAT_MESSAGE\" :\n            const copy = state.inputChat.slice()\n            copy.unshift({\n                text:action.payload.chat,\n                time:action.payload.time\n            })\n            // const ref = firebaseDb.ref('rooms').child('room1').child('chat')\n            // ref.push({\n            //     text:action.payload.chat,\n            //     time:action.payload.time\n            // })\n            return{\n                ...state,\n                chat:\"\",\n                inputChat:copy\n            }\n        case \"EQUAL_DATABASE\" :\n            return{\n                ...state,\n                inputChat:action.payload.inputChat\n            }\n        default :\n            return state\n    }\n}\n\nexport default chatReducer","//reset.cssはこの位置に固定\nimport './styles/reset.css'\n\n//ここから記述\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App'\nimport { Provider } from 'react-redux'\nimport { createStore,applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport chatReducer from './reducers/chats'\nimport './styles/index.css'\n\nconst store = createStore(\n    chatReducer,\n    applyMiddleware(logger)\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}